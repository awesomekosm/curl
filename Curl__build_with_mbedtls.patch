Subject: [PATCH] Curl: build with mbedtls
---
Index: CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	(revision 5ce164e0e9290c96eb7d502173426c0a135ec008)
+++ b/CMakeLists.txt	(revision db01d3da96298bc44a68145a9b7fbe88569697f7)
@@ -496,11 +496,38 @@
 endif()
 
 if(CURL_USE_MBEDTLS)
-  find_package(MbedTLS REQUIRED)
   set(SSL_ENABLED ON)
   set(USE_MBEDTLS ON)
+  if (UNIX AND NOT APPLE)
+    message("Curl UNIX dependent libraries")
+    find_library(MBEDTLS_LIB libmbedtls.a HINTS ${CMAKE_CURRENT_SOURCE_DIR}/../yojimbo/dependencies/mbedtls/lib/linux64)
+    find_library(MBEDTLS_X_LIB libmbedx509.a HINTS ${CMAKE_CURRENT_SOURCE_DIR}/../yojimbo/dependencies/mbedtls/lib/linux64)
+    find_library(MBEDTLS_CRYP_LIB libmbedcrypto.a HINTS ${CMAKE_CURRENT_SOURCE_DIR}/../yojimbo/dependencies/mbedtls/lib/linux64)
+    set(MBEDTLS_LIBRARIES "${MBEDTLS_LIB}" "${MBEDTLS_X_LIB}" "${MBEDTLS_CRYP_LIB}")
+    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../yojimbo/dependencies/mbedtls/include)
+    message("${MBEDTLS_LIB}\n${MBEDTLS_X_LIB}\n${MBEDTLS_CRYP_LIB}")
+  endif (UNIX AND NOT APPLE)
+  if (APPLE)
+    message("Curl APPLE/CLANG dependent libraries")
+    find_path(MBEDTLS_INCLUDE_DIR mbedtls/ssl.h)
+    find_library(MBEDTLS_LIB mbedtls)
+    find_library(MBEDTLS_CRYP_LIB mbedcrypto)
+    find_library(MBEDTLS_X_LIB mbedx509)
+    set(MBEDTLS_LIBRARIES "${MBEDTLS_LIB}" "${MBEDTLS_X_LIB}" "${MBEDTLS_CRYP_LIB}")
+    include_directories(${MBEDTLS_INCLUDE_DIR})
+    message("${MBEDTLS_LIB}\n${MBEDTLS_X_LIB}\n${MBEDTLS_CRYP_LIB}")
+  endif(APPLE)
+  if (MINGW)
+    message("Curl MINGW dependent libraries")
+    find_library(MBEDTLS_LIB libmbedtls HINTS ${CMAKE_CURRENT_SOURCE_DIR}/../yojimbo/dependencies/mbedtls/lib/win64)
+    find_library(MBEDTLS_X_LIB libmbedx509 HINTS ${CMAKE_CURRENT_SOURCE_DIR}/../yojimbo/dependencies/mbedtls/lib/win64)
+    find_library(MBEDTLS_CRYP_LIB libmbedcrypto HINTS ${CMAKE_CURRENT_SOURCE_DIR}/../yojimbo/dependencies/mbedtls/lib/win64)
+    find_library(WS2_32 libws2_32 HINTS ${CMAKE_CURRENT_SOURCE_DIR}/../yojimbo/dependencies/win64)
+    set(MBEDTLS_LIBRARIES "${MBEDTLS_LIB}" "${MBEDTLS_X_LIB}" "${MBEDTLS_CRYP_LIB}" "${WS2_32}")
+    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../yojimbo/dependencies/mbedtls/include)
+    message("${MBEDTLS_LIB}\n${MBEDTLS_X_LIB}\n${MBEDTLS_CRYP_LIB}\n${WS2_32}")
+  endif (MINGW)
   list(APPEND CURL_LIBS ${MBEDTLS_LIBRARIES})
-  include_directories(${MBEDTLS_INCLUDE_DIRS})
 
   if(CURL_DEFAULT_SSL_BACKEND AND CURL_DEFAULT_SSL_BACKEND STREQUAL "mbedtls")
     set(valid_default_ssl_backend TRUE)
